{"version":3,"sources":["components/Button.js","components/images/mathWhiz.jpg","components/Start.js","components/GameOver.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Intro","div","image","btnCSS","css","text","Start","props","onClick","Title","h1","Points","p","GameOver","pts","window","location","reload","QuizWindow","Options","Option","Question","Quiz","useState","quiz","setQuiz","number","setNumber","setPts","pickAnswer","e","userAnswer","target","outerText","answer","useEffect","axios","get","then","res","data","results","map","item","question","options","arr","incorrect_answers","correct_answer","sort","Math","random","catch","err","console","error","dangerouslySetInnerHTML","__html","index","App","start","setStart","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAGaA,EAASC,IAAOC,OAAV,uWAiBJF,ICpBA,MAA0B,qC,OCKnCG,EAAQF,IAAOG,IAAV,mEAAGH,CAAH,yGAGkBI,GAIvBC,EAASC,YAAH,kDAINC,EAAOD,YAAH,qE,mGAaeC,G,qGAEoBF,GAK9BG,EAfD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAIb,OACI,eAACP,EAAD,WAEQ,sDACA,yCAEJ,iBAAQQ,QARE,kBAAMD,GAAM,IAQtB,uB,yBC5BNE,EAAQX,IAAOY,GAAV,wEAKLC,EAASb,IAAOc,EAAV,2EAkBGC,EAbE,SAAC,GAAW,IAAVC,EAAS,EAATA,IAIf,OACI,qCACI,cAACL,EAAD,wBACA,eAACE,EAAD,sBAAiBG,EAAjB,iBACA,cAACjB,EAAD,CAAQW,QANI,kBAAMO,OAAOC,SAASC,UAMlC,uBChBNC,EAAapB,IAAOG,IAAV,sHAMVkB,EAAUrB,IAAOG,IAAV,8LAUPmB,EAAStB,IAAOC,OAAV,ofAuBNsB,EAAWvB,IAAOG,IAAV,kEAgECqB,EA3DF,WAAO,IAAD,EAESC,mBAAS,IAFlB,mBAERC,EAFQ,KAEFC,EAFE,OAGaF,mBAAS,GAHtB,mBAGRG,EAHQ,KAGAC,EAHA,OAIOJ,mBAAS,GAJhB,mBAIRT,EAJQ,KAIHc,EAJG,KAQTC,EAAa,SAACC,GAEhB,IAAIC,EAAaD,EAAEE,OAAOC,UAEtBT,EAAKE,GAAQQ,SAAWH,GAAYH,EAAOd,EAAM,GACrDa,EAAUD,EAAS,IAwBvB,OArBAS,qBAAU,WAENC,IAAMC,IAAI,qDACLC,MAAK,SAAAC,GACFd,EAAQc,EAAIC,KAAKC,QAAQC,KAAI,SAAAC,GAAI,MAE7B,CACIC,SAAUD,EAAKC,SACfC,SAlBHC,EAkBoB,GAAD,mBAAKH,EAAKI,mBAAV,CAA6BJ,EAAKK,iBAlB7CF,EAAIG,MAAK,kBAAMC,KAAKC,SAAW,MAmBpCjB,OAAQS,EAAKK,gBAnBjB,IAACF,SAwBRM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAGjC,IAKC,eAACnC,EAAD,WACMM,EAAKE,IAEH,qCACI,cAACL,EAAD,CAAUmC,wBAAyB,CAAEC,OAAQjC,EAAKE,GAAQkB,YAE1D,cAACzB,EAAD,UACKK,EAAKE,GAAQmB,QAAQH,KAAI,SAACC,EAAMe,GAAP,OACtB,cAACtC,EAAD,CAAoBoC,wBAAyB,CAAEC,OAAQd,GAAQnC,QAASqB,GAA3D6B,WAOd,KAAXhC,GAAiB,cAAC,EAAD,CAAUZ,IAAKA,QCtFjC6C,MAXf,WAAgB,IAAD,EAEapC,oBAAS,GAFtB,mBAENqC,EAFM,KAECC,EAFD,KAIb,OACE,qBAAKC,UAAU,OAAf,SACIF,EAAQ,cAAC,EAAD,IAAW,cAAC,EAAD,CAAOrD,MAAOsD,OCC1BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08ba63a4.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\nexport const Button = styled.button`\r\n    border: 1px solid #616A94;\r\n    border-radius: 50px;\r\n    padding: 15px 30px;\r\n    text-decoration: none;\r\n    color: #616A94;\r\n    background-color: #161A31;\r\n    transition: 0.3s;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        color: white;\r\n        background-color: #616A94;\r\n    }\r\n`;\r\n\r\nexport default Button","export default __webpack_public_path__ + \"static/media/mathWhiz.75d53ef2.jpg\";","import React from 'react'\r\nimport styled, { css } from 'styled-components/macro'\r\nimport Button from './Button'\r\nimport image from './images/mathWhiz.jpg'\r\n\r\nconst Intro = styled.div`\r\n  margin-top: 2em;\r\n  text-align: center;\r\n  background: #d9d9d9 url('${image}') no-repeat center bottom;\r\n  height: 500px;\r\n`;\r\n\r\nconst btnCSS = css`\r\n    margin-top: 9em;\r\n`;\r\n\r\nconst text = css`\r\n    margin-top: 1em;\r\n    color: black;\r\n`;\r\n\r\nconst Start = ({ props }) => {\r\n\r\n    const startQuiz = () => props(true)\r\n\r\n    return (\r\n        <Intro>\r\n            \r\n                <h1>Are you a Math Whiz?</h1>\r\n                <h4 css={text}>Take Quiz.</h4>\r\n           \r\n            <Button onClick={startQuiz} css={btnCSS}>Start</Button>\r\n        </Intro>\r\n    )\r\n}\r\n\r\nexport default Start","import styled from 'styled-components'\r\nimport {Button} from './Button'\r\n\r\nconst Title = styled.h1`\r\n    margin-top: 4em;\r\n    font-size: 48px;\r\n`;\r\n\r\nconst Points = styled.p`\r\n    font-size: 24px;\r\n    margin-bottom: 3em;\r\n`;\r\n\r\nconst GameOver = ({pts}) => {\r\n\r\n    const refreshPage = () => window.location.reload();\r\n\r\n    return (\r\n        <>\r\n            <Title>Game Over</Title>\r\n            <Points>You did {pts} out of 10!</Points>\r\n            <Button onClick={refreshPage}>Retry</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameOver","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport GameOver from './GameOver';\r\n\r\nconst QuizWindow = styled.div`\r\n    text-align: center;\r\n    font-size: clamp(20px, 2.5vw, 24px);\r\n    margin-top: 10vh;\r\n`;\r\n\r\nconst Options = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 70%;\r\n    margin: 2em auto;\r\n    @media screen and (min-width: 1180px) {\r\n        width: 50%;\r\n    }\r\n`;\r\n\r\nconst Option = styled.button`\r\n    display: block;\r\n    border: 1px solid #616A94;\r\n    border-radius: 15px;\r\n    padding: 15px 30px;\r\n    text-decoration: none;\r\n    color: #616A94;\r\n    background-color: #161A31;\r\n    transition: 0.3s;\r\n    font-size: 1em;\r\n    outline: none;\r\n    user-select: none;\r\n    margin-top: 1em;\r\n    cursor: pointer;\r\n    \r\n    @media screen and (min-width: 1180px) {\r\n        &:hover {\r\n            color: white;\r\n            background-color: #616A94;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Question = styled.div`\r\n    width: 70%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Quiz = () => {\r\n\r\n    const [quiz, setQuiz] = useState([]);\r\n    const [number, setNumber] = useState(0);\r\n    const [pts, setPts] = useState(0);\r\n\r\n    const shuffle = (arr) => arr.sort(() => Math.random() - 1);\r\n\r\n    const pickAnswer = (e) => {\r\n\r\n        let userAnswer = e.target.outerText;\r\n\r\n        if (quiz[number].answer === userAnswer) setPts(pts + 1);\r\n        setNumber(number + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('https://opentdb.com/api.php?amount=10&category=19')\r\n            .then(res => {\r\n                setQuiz(res.data.results.map(item => (\r\n\r\n                    {\r\n                        question: item.question,\r\n                        options: shuffle([...item.incorrect_answers, item.correct_answer]),\r\n                        answer: item.correct_answer\r\n                    }\r\n\r\n                )));\r\n            })\r\n            .catch(err => console.error(err))\r\n            \r\n\r\n    }, []);\r\n\r\n    //going to use dangerouslySetInnerHTML instead of innerHTML to avoid exposure to cross-site scripting attack\r\n\r\n    return (\r\n        <QuizWindow>\r\n            { quiz[number] &&\r\n\r\n                <>\r\n                    <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\r\n\r\n                    <Options>\r\n                        {quiz[number].options.map((item, index) => (\r\n                            <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\r\n                        ))}\r\n                    </Options>\r\n                </>\r\n\r\n            }\r\n            {\r\n                number === 10 && <GameOver pts={pts} />\r\n            }\r\n        </QuizWindow>\r\n    )\r\n}\r\n\r\nexport default Quiz","import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Start from './components/Start'\r\nimport Quiz from './components/Quiz'\r\n\r\nfunction App() {\r\n\r\n  const [start, setStart] = useState(false);\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      { start ? <Quiz /> : <Start props={setStart} />} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}